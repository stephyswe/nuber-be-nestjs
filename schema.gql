# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  coverImg: String
  name: String!
  restaurantCount: Int!
  restaurants: [Restaurant!]
  slug: String!
}

input CategoryInput {
  slug: String!
}

type CategoryOutput {
  category: Category
  error: String
  ok: Boolean!
}

input CreateAccountInput {
  data: CreateAccountInputType!
}

input CreateAccountInputType {
  email: String!
  password: String!
  role: String!
}

type CreateAccountOutput {
  error: String
  ok: Boolean!
}

input CreateRestaurantInputArgs {
  address: String!
  categoryName: String!
  coverImg: String
  name: String!
}

type CreateRestaurantOutput {
  error: String
  ok: Boolean!
}

input DeleteRestaurantInput {
  restaurantId: Float!
}

type DeleteRestaurantOutput {
  error: String
  ok: Boolean!
}

input EditProfileInputArgs {
  email: String!
  verified: Boolean
}

type EditProfileOutput {
  error: String
  ok: Boolean!
}

type FindManyCategoriesOutput {
  categories: [Category!]
  error: String
  ok: Boolean!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginOutput {
  error: String
  ok: Boolean!
  token: String
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  createRestaurant(createRestaurantDto: CreateRestaurantInputArgs!): CreateRestaurantOutput!
  deleteRestaurant(input: DeleteRestaurantInput!): DeleteRestaurantOutput!
  editProfile(input: EditProfileInputArgs!): EditProfileOutput!
  login(input: LoginInput!): LoginOutput!
  updateRestaurant(input: UpdateRestaurantInputArgs!): UpdateRestaurantOutput!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailOutput!
}

type Query {
  category(input: CategoryInput!): CategoryOutput!
  findManyCategories: FindManyCategoriesOutput!
  me: User!
  restaurants: [Restaurant!]!
  userProfile(userId: Float!): UserProfileOutput!
}

type Restaurant {
  address: String!
  category: Category
  coverImg: String
  id: Float!
  name: String!
  owner: User
}

input UpdateRestaurantInputArgs {
  address: String
  categoryName: String
  coverImg: String
  name: String
  restaurantId: Float!
}

type UpdateRestaurantOutput {
  error: String
  ok: Boolean!
}

type User {
  email: String!
  password: String!
  restaurants: [Restaurant!]!
  role: String!
  verified: Boolean
}

type UserProfileOutput {
  error: String
  ok: Boolean!
  user: User
}

input VerifyEmailInput {
  code: String!
}

type VerifyEmailOutput {
  error: String
  ok: Boolean!
}